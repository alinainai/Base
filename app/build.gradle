apply plugin: 'com.android.application'
apply plugin: 'com.jakewharton.butterknife'

//kotlin
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'


def static releaseTime() {
    return new Date().format("MMddHHmm", TimeZone.getDefault())
}

android {
    compileSdkVersion parent.ext.compileSdkVersion
    defaultConfig {
        applicationId "trunk.doi.base"
        minSdkVersion parent.ext.minSdkVersion
        targetSdkVersion parent.ext.targetSdkVersion
        versionCode 1
        versionName "1.0.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        ndk { abiFilters "armeabi","x86" }

        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath false
            }
        }

        dexOptions {
            javaMaxHeapSize "4g"
        }

    }
    //解决kotlin添加过程中出现的Error: Program type already present: org.intellij.lang.annotations.Identifier问题
    configurations {
        cleanedAnnotations
        compile.exclude group: 'org.jetbrains', module: 'annotations'
    }

    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:1.3.9'
    }
    sourceSets {
        main {
            assets.srcDirs = ['src/main/assets', 'src/main/assets/']
        }
    }
    sourceSets.main.jniLibs.srcDirs = ['libs']

    signingConfigs {

        debug {
            //用来解决打包时只选择v2，安装报错的问题
            v1SigningEnabled true
            v2SigningEnabled true
            storeFile file("../jks/bopai.keystore")
            storePassword "bp5963373"
            keyAlias "bopai.keysotre"
            keyPassword "bp5963373"
        }
        release {
            v1SigningEnabled true
            v2SigningEnabled true
            storeFile file("../jks/p2p.keystore")
            storeFile file("../jks/bopai.keystore")
            storePassword "bp5963373"
            keyAlias "bopai.keysotre"
            keyPassword "bp5963373"
        }

        buildTypes {

            debug {
                //启用multiDex的支持
                multiDexEnabled true
                //移除无用的资源文件
                shrinkResources true
                //开启混淆
                minifyEnabled true
                //压缩对齐生成的apk包
                zipAlignEnabled true
                signingConfig signingConfigs.debug
                proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            }

            release {
                //移除无用的资源文件
                shrinkResources true
                //启用multiDex的支持
                multiDexEnabled true
                //关闭混淆
                minifyEnabled true
                //压缩对齐生成的apk包
                zipAlignEnabled true
                signingConfig signingConfigs.release
                proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

                applicationVariants.all { variant ->
                    variant.outputs.all { output ->
                        def outputFile = output.outputFile
                        if (outputFile != null && outputFile.name.endsWith(".apk")) {
                            //这里修改apk文件名
                            def fileName = "credit_${defaultConfig.versionName}_${buildType.name}_${releaseTime()}.apk"
                            outputFileName = fileName
                        }
                    }
                }
            }
        }
        repositories {
            mavenCentral()
            flatDir {
                dirs 'libs'
            }
        }
        File propFile = file('signing.properties')
        if (propFile.exists()) {
            Properties props = new Properties()
            props.load(new FileInputStream(propFile))
            if (props.containsKey('STORE_FILE') && props.containsKey('STORE_PASSWORD') && props.containsKey('KEY_ALIAS') && props.containsKey('KEY_PASSWORD')) {
                android.signingConfigs.release.storeFile = file(props['STORE_FILE'])
                android.signingConfigs.release.storePassword = props['STORE_PASSWORD']
                android.signingConfigs.release.keyAlias = props['KEY_ALIAS']
                android.signingConfigs.release.keyPassword = props['KEY_PASSWORD']
            } else {
                android.buildTypes.release.signingConfig = null
            }
        } else {
            android.buildTypes.release.signingConfig = null
        }
    }


}


dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    //noinspection GradleCompatible
    implementation 'com.android.support:support-v4:28.0.0'
    implementation "com.android.support:appcompat-v7:28.0.0"
    implementation "com.android.support:recyclerview-v7:28.0.0"
    implementation "com.android.support:cardview-v7:28.0.0"
    implementation "com.android.support:palette-v7:28.0.0"
    implementation "com.android.support:design:28.0.0"
    // 用于Java编写执行Java测试用例。
    //https://github.com/ZeroBrain/AndroidPermissions
    implementation files('libs/tbs_sdk_thirdapp_v3.3.0.1045_43300_sharewithdownload_withoutGame_obfs_20170605_170212.jar')

    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.2'
    implementation 'com.trello.rxlifecycle2:rxlifecycle:2.2.1'
    implementation 'com.trello.rxlifecycle2:rxlifecycle-components:2.2.1'

    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'
    implementation 'com.squareup.retrofit2:converter-scalars:2.3.0'
//    compile 'com.squareup.retrofit2:adapter-rxjava:2.3.0'
    implementation 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'

    implementation 'com.squareup.okhttp3:okhttp:3.11.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.11.0'

    implementation 'com.google.code.gson:gson:2.8.2'
    implementation 'com.android.support:multidex:1.0.3'
    implementation 'com.github.chrisbanes.photoview:library:1.2.4'
    //Glide图片加载
    implementation 'com.github.bumptech.glide:glide:4.8.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.8.0'
    implementation 'com.github.bumptech.glide:okhttp3-integration:4.4.0'


    //ali热修复
    //    compile 'com.aliyun.ams:alicloud-android-hotfix:3.0.8'
    testImplementation 'junit:junit:4.12'
    //butterknife
    implementation 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'

    //内存泄漏检测
    testImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5.4'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'
    //磁盘缓存
    //    compile 'com.jakewharton:disklrucache:2.0.2'
    implementation files('libs/BaiduLBS_Android.jar')
    //自动化测试
    implementation 'com.jayway.android.robotium:robotium-solo:5.6.3'
    implementation 'com.zhy:okhttputils:2.6.2'
    //lottie动画框架
    implementation 'com.airbnb.android:lottie:2.5.0-rc1'
    //添加kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

}
repositories {
    mavenCentral()
    google()
}
