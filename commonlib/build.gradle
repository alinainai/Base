apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildToolsVersion"]
    useLibrary 'org.apache.http.legacy'

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    //support
    api(rootProject.ext.dependencies["support-v4"]) {
        exclude module: 'support-annotations'
    }
    api('androidx.appcompat:appcompat:1.1.0-alpha05') {
        exclude module: 'support-annotations'
    }
    api('androidx.recyclerview:recyclerview:1.1.0-alpha05') {
        exclude module: 'support-annotations'
    }
    api('androidx.constraintlayout:constraintlayout:2.0.0-beta1') {
        exclude module: 'support-annotations'
    }
    api 'androidx.annotation:annotation:1.1.0'
    implementation 'androidx.multidex:multidex:2.0.1'
    //network
    api(rootProject.ext.dependencies["retrofit"]) {
        exclude module: 'okhttp'
        exclude module: 'okio'
    }
    implementation(rootProject.ext.dependencies["retrofit-converter-gson"]) {
        exclude module: 'gson'
        exclude module: 'okhttp'
        exclude module: 'okio'
        exclude module: 'retrofit'
    }
    implementation(rootProject.ext.dependencies["retrofit-adapter-rxjava2"]) {
        exclude module: 'rxjava'
        exclude module: 'okhttp'
        exclude module: 'retrofit'
        exclude module: 'okio'
    }
    api 'com.squareup.okhttp3:okhttp:4.0.0-alpha02'
    api 'com.squareup.okhttp3:logging-interceptor:4.0.0-alpha02'
    //rx
    api 'io.reactivex.rxjava2:rxjava:2.2.12'
    api('io.reactivex.rxjava2:rxandroid:2.1.1') {
        exclude module: 'rxjava'
    }
    api(rootProject.ext.dependencies["rxlifecycle2"]) {
        exclude module: 'rxjava'
        exclude module: 'jsr305'
    }
    api(rootProject.ext.dependencies["rxlifecycle2-android"]) {
        exclude module: 'support-annotations'
        exclude module: 'rxjava'
        exclude module: 'rxandroid'
        exclude module: 'rxlifecycle'
    }
    api(rootProject.ext.dependencies["rxcache2"]) {
        exclude module: 'rxjava'
        exclude module: 'dagger'
        exclude module: 'api'
    }
    implementation(rootProject.ext.dependencies["rxcache-jolyglot-gson"]) {
        exclude module: 'gson'
    }
    //tool
    //dagger
    api rootProject.ext.dependencies["dagger2"]
    annotationProcessor rootProject.ext.dependencies["dagger2-compiler"]
    api rootProject.ext.dependencies["gson"]
    //glide图片加载
    api (rootProject.ext.dependencies["glide"]){
        exclude module: 'support-annotations'
    }
//    annotationProcessor 'androidx.annotation:annotation:1.0.2'
    annotationProcessor rootProject.ext.dependencies["glide-compiler"]
    api rootProject.ext.dependencies["glide-loader-okhttp3"]
    //test
    api rootProject.ext.dependencies["timber"]
    //view
    api(rootProject.ext.dependencies["butterknife"]) {
        exclude module: 'support-annotations'
        exclude module: 'support-compat'
    }
    compileOnly rootProject.ext.dependencies["androideventbus"]
    compileOnly rootProject.ext.dependencies["eventbus"]

    implementation rootProject.ext.dependencies["support-annotations"]
    annotationProcessor rootProject.ext.dependencies["support-annotations"]


    api project(':baseui')
}
